{"ast":null,"code":"import _classCallCheck from\"/Users/chia/mini/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/chia/mini/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/chia/mini/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/chia/mini/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import*as d3 from'd3';import IceCreamTest from'./IceCreamTest.csv';var ScatterPlot=/*#__PURE__*/function(_React$Component){_inherits(ScatterPlot,_React$Component);var _super=_createSuper(ScatterPlot);function ScatterPlot(){_classCallCheck(this,ScatterPlot);return _super.apply(this,arguments);}_createClass(ScatterPlot,[{key:\"componentDidMount\",value:function componentDidMount(){this.drawChart();}},{key:\"drawChart\",value:function drawChart(){var _this=this;var data=this.props.data;var svgWidth=this.props.width;var svgHeight=this.props.height;//Note: getting width and height from a variable rather than the elements attribute e.g. svg.attr(\"width\")\nvar margin={top:20,right:20,bottom:30,left:40},width=svgWidth-margin.left-margin.right,height=svgHeight-margin.top-margin.bottom;d3.csv(IceCreamTest).then(function(data){console.log(data);var xAxis=d3.scaleBand().rangeRound([0,width]).padding(0.1);var yAxis=d3.scaleLinear().rangeRound([height,0]);xAxis.domain(data.map(function(d){return d.Temperature;}));yAxis.domain([0,d3.max(data,function(d){return d.Revenue;})]);var svg=d3.select(\"body\").append(\"svg\").attr(\"width\",_this.props.width).attr(\"height\",_this.props.height).append(\"g\").attr(\"transform\",\"translate(\"+margin.left+\",\"+margin.top+\")\");// Add X axis\nvar x=d3.scaleLinear().domain([0,4000]).range([0,width]);svg.append(\"g\").attr(\"transform\",\"translate(0,\"+height+\")\").call(d3.axisBottom(xAxis));// Add Y axis\nvar y=d3.scaleLinear().domain([0,500000]).range([height,0]);svg.append(\"g\").call(d3.axisLeft(yAxis));xAxis.domain(data.map(function(d){return d.Temperature;}));yAxis.domain([0,d3.max(data,function(d){return d.Revenue;})]);// Add dots\nsvg.append('g').selectAll(\"dot\").data(data).enter().append(\"circle\").attr(\"cx\",function(d){return xAxis(d.Temperature);}).attr(\"cy\",function(d){return yAxis(d.Revenue);}).attr(\"r\",5).style(\"fill\",\"steelblue\");});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{id:\"#\"+this.props.id});}}]);return ScatterPlot;}(React.Component);export default ScatterPlot;","map":{"version":3,"sources":["/Users/chia/mini/src/ScatterPlot.js"],"names":["React","Component","d3","IceCreamTest","ScatterPlot","drawChart","data","props","svgWidth","width","svgHeight","height","margin","top","right","bottom","left","csv","then","console","log","xAxis","scaleBand","rangeRound","padding","yAxis","scaleLinear","domain","map","d","Temperature","max","Revenue","svg","select","append","attr","x","range","call","axisBottom","y","axisLeft","selectAll","enter","style","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport IceCreamTest from './IceCreamTest.csv';\n\nclass ScatterPlot extends React.Component {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  drawChart() {\n    const data = this.props.data;\n    const svgWidth = this.props.width;\n    const svgHeight = this.props.height;\n\n    //Note: getting width and height from a variable rather than the elements attribute e.g. svg.attr(\"width\")\n    const margin = { top: 20, right: 20, bottom: 30, left: 40 },\n      width = svgWidth - margin.left - margin.right,\n      height = svgHeight - margin.top - margin.bottom;\n\n\n    d3.csv(IceCreamTest).then((data) => {\n      console.log(data);\n\n      const xAxis = d3.scaleBand()\n        .rangeRound([0, width])\n        .padding(0.1)\n\n      const yAxis = d3.scaleLinear()\n        .rangeRound([height, 0]);\n\n      xAxis.domain(data.map(function(d) { return d.Temperature; }));\n      yAxis.domain([0, d3.max(data, function(d) { return d.Revenue; })]);\n\n      var svg = d3.select(\"body\")\n        .append(\"svg\")\n        .attr(\"width\", this.props.width)\n        .attr(\"height\", this.props.height)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\n      // Add X axis\n      var x = d3.scaleLinear()\n        .domain([0, 4000])\n        .range([ 0, width ]);\n      svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(xAxis));\n\n      // Add Y axis\n      var y = d3.scaleLinear()\n        .domain([0, 500000])\n        .range([ height, 0]);\n      svg.append(\"g\")\n        .call(d3.axisLeft(yAxis));\n\n        xAxis.domain(data.map(function(d) { return d.Temperature; }));\n        yAxis.domain([0, d3.max(data, function(d) { return d.Revenue; })]);\n\n      // Add dots\n      svg.append('g')\n        .selectAll(\"dot\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n          .attr(\"cx\", function (d) { return xAxis(d.Temperature); } )\n          .attr(\"cy\", function (d) { return yAxis(d.Revenue); } )\n          .attr(\"r\", 5)\n          .style(\"fill\", \"steelblue\")\n    });\n  }\n\n  render(){\n    return <div id={\"#\" + this.props.id}></div>\n  }\n}\n\nexport default ScatterPlot;\n"]},"metadata":{},"sourceType":"module"}